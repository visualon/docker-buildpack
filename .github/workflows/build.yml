name: build

on:
  push:

env:
  OWNER: ${{ github.repository_owner }}
  FILE: buildpack
  IMAGE: ghcr.io/${{ github.repository_owner }}/buildpack
  NODE_VERSION: 16.18.1 # renovate: datasource=node depName=node
  DRY_RUN: ${{ github.ref != 'refs/heads/main' }}
  BUILDKIT_PROGRESS: plain

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: Lint
        run: yarn lint

  windows:
    needs: [lint]

    runs-on: ${{ format('windows-{0}', matrix.os) }}

    timeout-minutes: 60

    strategy:
      matrix:
        os: [2019, 2022]

    env:
      BASE: ${{ matrix.os }}
      TAG: windows-${{ matrix.os }}

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      # ignore not yet existing images
      - name: Fetch the Docker image
        run: |
          docker pull ${{ env.IMAGE }}
          docker pull ${{ env.IMAGE }}:${{ env.TAG }}
        continue-on-error: true

      - name: Build the Docker image
        run: docker build -t ${{ env.IMAGE }}:${{ env.TAG }} --cache-from ${{ env.IMAGE }} --cache-from ${{ env.IMAGE }}:${{ env.TAG }} -f Dockerfile.${{ env.BASE }} .
        working-directory: ./windows

      - name: Test run
        run: docker-compose --file docker-compose.test.yml run sut
        working-directory: ./windows
        env:
          IMAGE: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Log into registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Publish the Docker image
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ env.IMAGE }}
        env:
          IMAGE: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Publish the Docker image tags
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -f push.sh ]; then
            ./push.sh
          fi

        shell: bash
        working-directory: ./windows

  linux:
    needs: [lint]

    runs-on: ubuntu-latest

    timeout-minutes: 30

    env:
      TAG: linux

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: docker-config
        uses: renovatebot/internal-tools@4325a65d80eba70e1b7c5d05706e5111c6402843 # v1.14.9
        with:
          command: docker-config

      - name: Build the Docker image
        run: docker buildx bake test

      - name: Test run
        run: docker-compose --file docker-compose.test.yml run sut
        working-directory: ./linux
        env:
          IMAGE: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Log into registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Publish the Docker image
        if: github.ref == 'refs/heads/main'
        run: docker buildx bake build

  multi-arch:
    needs: [linux, windows]

    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Installing dependencies
        run: yarn install

      # - name: docker-config
      #   uses: renovatebot/internal-tools@ba8cd25dca8f977f71143adcab39b0fa06705398 # renovate: tag=v1.9.2
      #   with:
      #     command: docker-config

      - name: Log into registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build the Docker multiarch manifest
        run: yarn build --release latest

      - name: Publish the Docker multiarch manifest
        if: github.ref == 'refs/heads/main'
        run: yarn push --release latest

  release:
    needs: [multi-arch]

    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: Log into registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: semantic-release
        run: yarn semantic-release --dry-run ${{env.DRY_RUN}} --ci ${{env.DRY_RUN != 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
